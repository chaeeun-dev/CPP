
간단하게 개념만 잡으면 된다. 구현하거나 증명할 필요는 없다.

Binary Search Tree의 개념에서 시작함

Red-Black-Tree
1) 노드는 Red or Black
2) root는 Black
3) leaf(NIL)는 Black
4) Red 노드의 자식은 항상 Black (연속해서 Red-Red 등장할 수 없음) 

어떤 노드로부터 그에 속한 하위 리프 노드에 도달하는 모든 경로에는 같은 개수의 블랙 노드를 만난다
(어느 경로로 가던 블랙 노드의 개수가 같다!)

두줄 요약 - 추가는 삼촌 가챠, 삭제는 폭탄 제거

이진 탐색이 빠르지만, 추가 삽입 삭제가 힘들다
-> BST로 문제 해결 했지만, 한쪽으로 쏠리는 문제
-> 레드 블랙 트리로 해결, 이제 맵을 사용하자!(레드 블랙 트리가 맵의 기반이 되는 것)